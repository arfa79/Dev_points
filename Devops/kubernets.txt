===================== create and manage =========================
installing docker guide https://phoenixnap.com/kb/install-docker-on-ubuntu-20-04
sudo systemctl status docker
sudo systemctl reboot docker
sudo apt update
sudo apt-get install -y links
sudo apt-get install kubectl
sudo apt-get install minikube '''minikube for installing pakages'''
minikube start  '''you can run this without any other comand and its install nessary packages'''
minikube start --vm-driver=links '''docker by default'''
sudo groupadd docker '''ading docker to group for using '''
sudo usermod -aG docker alireza
newgrp docker
docker run hello-world 
kubectl get nodes 
minikube status
kubectl version
kubectl create deployment nginx-deployment --image=nginx
kubectl get pod (--watch)
kubectl create deployment wordpress --image=wordpress
kubectl get replicaset
kubectl create deployment phpmyadmin --image=phpmyadmin
kubectl edit deployment nginx-deployment
kubectl logs wordpress
kubctl describe ''' more info '''
kubectl exec -it nginx-deployment-66fb7f764c-g7zph -- bin/bash '''for having a command line and run command in pod  '''
kubectl delete deployment wordpress
kubectl apply -f mysql-secret.yaml (shecan for proxy and reboot)
nano mysql-secret.yaml (for solving mysql pod problem please look at https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/)
============================ components =================================
kubectl get service
kubectl get deployment mysql -o yaml
kubectl get deployment mysql -o yaml > mysql-result.yaml (saving result in yaml file)
ubectl delete -f mysql.yaml
============================ conecting to database =======================
kubectl get all
kubectl get secret (key is diffrent than of value and its the first part )
for external service weshould add an yamal file or at the end of main another file the configuration with --- and notice the nodeport must be 30000 to 32767 and type loadbalancer and nodeport is seprate
minikube service phpmyadmin
============================ namespaces ==================================
kubectl get namespaces
kubectl get configmap -n default
sudo snap install kubectx --classic
kubens argocd
kubectl get all -n default
kubectl get ingress -n default
kubectl delete ing wordpress-ingress
kubectl describe ingress phpmyadmin-ingress -n default